{"ast":null,"code":"var _jsxFileName = \"E:\\\\Golang\\\\capstone-fe-myblog\\\\src\\\\page\\\\write\\\\Write.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./write.css\";\nimport GetContent from '../home/Home';\nimport PostInput from \"../../component/postInput/postInput\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Write() {\n  _s();\n\n  const INSERT_CONTENT = gql`\n  mutation MyMutation($title: String = \"\", $stories: String = \"\", $updated_at: timestamptz = \"\") {\n    insert_myBlog_content(objects: {title: $title, stories: $stories, updated_at: $updated_at}) {\n      returning {\n        title\n      }\n    }\n  }\n  `;\n  const [insertNewData, {\n    data: newData\n  }] = useMutation(INSERT_CONTENT);\n\n  const tambahContent = async newContent => {\n    await insertNewData({\n      variables: {\n        object: {\n          title: newContent.title,\n          stories: newContent.stories\n        }\n      },\n      refetchQueries: [{\n        query: GetContent\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostInput, {\n    tambahContent: tambahContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Write, \"3LmVpp1bLtcW+1cOTw4so/K8/mU=\", false, function () {\n  return [useMutation];\n});\n\n_c = Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"sources":["E:/Golang/capstone-fe-myblog/src/page/write/Write.jsx"],"names":["GetContent","PostInput","gql","useMutation","Write","INSERT_CONTENT","insertNewData","data","newData","tambahContent","newContent","variables","object","title","stories","refetchQueries","query"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,SAAQC,GAAR,EAAYC,WAAZ,QAA8B,gBAA9B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,cAAc,GAAGH,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARE;AAUA,QAAM,CAACI,aAAD,EAAe;AAACC,IAAAA,IAAI,EAACC;AAAN,GAAf,IAA+BL,WAAW,CAACE,cAAD,CAAhD;;AAEA,QAAMI,aAAa,GAAG,MAAOC,UAAP,IAAsB;AAC1C,UAAMJ,aAAa,CAAC;AAClBK,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAACH,UAAU,CAACG,KADX;AAENC,UAAAA,OAAO,EAACJ,UAAU,CAACI;AAFb;AADC,OADO;AAOlBC,MAAAA,cAAc,EAAE,CACd;AACEC,QAAAA,KAAK,EAAEhB;AADT,OADc;AAPE,KAAD,CAAnB;AAaD,GAdD;;AAgBE,sBACE,QAAC,SAAD;AACA,IAAA,aAAa,EAAGS;AADhB;AAAA;AAAA;AAAA;AAAA,UADF;AAKH;;GAlCuBL,K;UAWeD,W;;;KAXfC,K","sourcesContent":["import \"./write.css\"\r\nimport GetContent from '../home/Home'\r\nimport PostInput from \"../../component/postInput/postInput\";\r\nimport {gql,useMutation} from \"@apollo/client\"\r\n\r\nexport default function Write() {\r\n  const INSERT_CONTENT = gql`\r\n  mutation MyMutation($title: String = \"\", $stories: String = \"\", $updated_at: timestamptz = \"\") {\r\n    insert_myBlog_content(objects: {title: $title, stories: $stories, updated_at: $updated_at}) {\r\n      returning {\r\n        title\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\n  const [insertNewData,{data:newData}]=useMutation(INSERT_CONTENT);\r\n\r\n  const tambahContent = async (newContent) => {\r\n    await insertNewData({\r\n      variables: {\r\n        object: {\r\n          title:newContent.title,\r\n          stories:newContent.stories,\r\n        },\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: GetContent,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  \r\n    return (\r\n      <PostInput \r\n      tambahContent ={tambahContent}\r\n      />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}